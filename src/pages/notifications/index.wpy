<template>
<view class="page">
  <view class="weui-page weui-page_access">
    <view class="weui-panel_bd">
      <repeat for="{{ notifications }}" key="id" index="index" item="notification">
        <view class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
          <navigator class="weui-media-box__hd weui-media-box__hd_in-appmsg" url="{{ notification.data.user_id }}">
            <image class="notificationer.avatar weui-media-box__thumb" src="{{ notification.data.user_avatar }}"/>
          </navigator>
          <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
            <navigator class="weui-media-box__title" url="/pages/topics/show?id={{ notification.data.topic_id }}">
              <view style="display:inline-block;vertical-align:middle">{{ notification.data.username }}</view>
              评论了
              <view style="display:inline-block;vertical-align:middle">{{ notification.data.topic_title }}</view>
            </navigator>

            <view class="weui-media-box__desc">
              <rich-text nodes="{{ notification.data.reply_count }}" bindtap="tap"></rich-text>
            </view>

            <view class="weui-media-box__info">
              <view class="weui-media-box__info__meta">{{ notification.created_at_diff }}</view>
            </view>
          </view>
        </view>
      </repeat>
      <view class="weui-loadmore weui-loadmore_line" wx:if="{{ noMoreData }}">
        <view class="loadmore__tips weui-loadmore__tips_in-line">没有更多数据</view>
      </view>
    </view>
  </view>
</view>
</template>

<script>
import wepy from 'wepy'
import util from '@/utils/util'
import api from '@/utils/api'

export default class notificationIndex extends wepy.page {
  config = {
    enablePullDownRefresh: true,
    navigationBarTitleText: '通知列表'
  }

  data = {
    notifications: [],
    noMoreData: false,
    isLoading: false,
    page: 1
  }

  async getNotifications(reset = false) {
    let { statusCode, data } = await api.authRequest({
      url: 'user/notifications',
      data: {
        page: this.page
      }
    })

    if (statusCode === 200) {
      let notifications = data.data

      notifications.forEach((notification) => {
        notification.created_at_diff = util.diffForHumans(notification.created_at)
      })

      this.notifications = reset ? notifications : [...this.notifications, ...notifications]

      let pagination = data.meta.pagination
      if (pagination.current_page === pagination.total_pages) {
        this.noLoadMore = true
      }
      this.$apply()
    }

    return { statusCode, data }
  }

  async markAsRead() {
    let { statusCode } = await api.authRequest({
      url: `user/notifications`,
      method: 'PUT'
    }, false)

    if (statusCode === 204) {
      this.$parent.globalData.unreadCount = 0
      this.$apply()
    }
  }

  async onLoad() {
    this.getNotifications()
    this.markAsRead()
  }

  async onPullDownRefresh() {
    this.noMoreData = false
    this.page = 1
    await this.getNotifications(true)

    this.markAsRead()
    wepy.stopPullDownRefresh()
  }

  async onReachBottom() {
    if (this.noMoreData || this.isLoading) {
      return
    }

    this.isLoading = true
    this.page++
    await this.getNotifications()
    this.isLoading = false

    this.$apply()
  }
}
</script>
